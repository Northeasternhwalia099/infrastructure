AWSTemplateFormatVersion: "2010-09-09"

Description: Creating VPC then adding IGW to it establishing three public subnets on the same virtual private network
Parameters:
  Environment:
    Description: a resource name preceded with an environment name
    Type: String
    Default: csye6225-environment

  VpcCIDR:
    Type: String
    Default: 10.192.0.0/16
    Description: Enter the IP range please

  CIDRPublicSubnet1:
    Type: String
    Default: 10.192.10.0/24
    Description: The IP range in the first Availability Zone should be entered

  CIDRPublicSubnet2:
    Type: String
    Default: 10.192.11.0/24
    Description: The IP range in the second Availability Zone should be entered

  CIDRPublicSubnet3:
    Type: String
    Default: 10.192.20.0/24
    Description: The IP range in the third Availability Zone should be entered

Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCIDR
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: !Ref Environment
  #creating IGW
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Ref Environment
  #Attaching above created IGW with myVPC
  IGAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref VPC
 #creating Public Subnet-1:
  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [0, !GetAZs ""]
      CidrBlock: !Ref CIDRPublicSubnet1
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub ${Environment} Public Subnet (AZ1)
 #creating Public Subnet-2:
  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [1, !GetAZs ""]
      CidrBlock: !Ref CIDRPublicSubnet2
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub ${Environment} Public Subnet (AZ2)
  #creating Public Subnet-3:
  PublicSubnet3:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [2, !GetAZs ""]
      CidrBlock: !Ref CIDRPublicSubnet3
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: !Sub ${Environment} Public Subnet (AZ3)
 #creating A Public Route Table:
  Route:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub ${Environment} Public Routes
 #constructing a public route with the target CIDR block 0.0.0.0/0 and the above-mentioned public route table
  DefaultPublicRoute:
    Type: AWS::EC2::Route
    DependsOn: IGAttachment
    Properties:
      RouteTableId: !Ref Route
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway
 #The public subnets-1 are being connected to the public route table:
  PSubnet1RouteAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref Route
      SubnetId: !Ref PublicSubnet1
  #The public subnets-2 are being connected to the public route table:
  PSubnet2RouteAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref Route
      SubnetId: !Ref PublicSubnet2
  #The public subnets-3 are being connected to the public route table:
  PSubnet3RouteAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref Route
      SubnetId: !Ref PublicSubnet3
#Exposing 1 stack resources to others
Outputs:
  VpcId:
    Description: The VPC ID
    Value: !Ref VPC
  PublicSubnet1:  
    Description: Public Subnet-1
    Value: !Ref PublicSubnet1
  PublicSubnet2:  
    Description: Public Subnet-2
    Value: !Ref PublicSubnet2
  PublicSubnet3:  
    Description: Public Subnet-3
    Value: !Ref PublicSubnet3
  Subnets:
    Description: The list of subnets
    Value: !Join [",",[ !Ref PublicSubnet1 , !Ref PublicSubnet2 , !Ref PublicSubnet3]]